# Generated by Django 3.1.5 on 2021-03-11 13:19

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.IntegerField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Car',
            fields=[
                ('car_id', models.IntegerField(db_column='Car_id', primary_key=True, serialize=False)),
                ('brand', models.CharField(db_column='Brand', max_length=45)),
                ('battery_size', models.IntegerField(db_column='Battery_Size')),
            ],
            options={
                'db_table': 'car',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Charging',
            fields=[
                ('charging_id', models.IntegerField(db_column='Charging_id', primary_key=True, serialize=False)),
                ('start', models.DateTimeField(db_column='Start')),
                ('finish', models.DateTimeField(db_column='Finish')),
                ('type', models.CharField(db_column='Type', max_length=45)),
            ],
            options={
                'db_table': 'charging',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.PositiveSmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EnergyProvider',
            fields=[
                ('provider_id', models.IntegerField(db_column='Provider_id', primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='Name', max_length=45)),
            ],
            options={
                'db_table': 'energy_provider',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('payment_id', models.IntegerField(db_column='Payment_id', primary_key=True, serialize=False)),
                ('datetime', models.DateTimeField(db_column='DateTime')),
                ('amount', models.FloatField(db_column='Amount')),
                ('method', models.CharField(db_column='Method', max_length=45)),
                ('bank', models.CharField(db_column='Bank', max_length=45)),
            ],
            options={
                'db_table': 'payment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Point',
            fields=[
                ('point_id', models.IntegerField(db_column='Point_id', primary_key=True, serialize=False)),
                ('operator', models.CharField(db_column='Operator', max_length=45)),
            ],
            options={
                'db_table': 'point',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Station',
            fields=[
                ('station_id', models.IntegerField(db_column='Station_id', primary_key=True, serialize=False)),
                ('country', models.CharField(db_column='Country', max_length=45)),
                ('city', models.CharField(db_column='City', max_length=45)),
                ('address', models.CharField(db_column='Address', max_length=45)),
            ],
            options={
                'db_table': 'station',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StationPhones',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_no', models.CharField(db_column='Phone_no', max_length=15)),
            ],
            options={
                'db_table': 'station_phones',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('user_id', models.IntegerField(db_column='User_id', primary_key=True, serialize=False)),
                ('username', models.CharField(db_column='Username', max_length=45)),
                ('password', models.CharField(db_column='Password', max_length=45)),
                ('email', models.CharField(db_column='Email', max_length=45)),
                ('card_id', models.IntegerField(db_column='Card_id')),
                ('wallet_id', models.CharField(db_column='Wallet_id', max_length=15)),
                ('points', models.IntegerField(db_column='Points')),
            ],
            options={
                'db_table': 'user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserHasCar',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'user_has_car',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserPhones',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_no', models.CharField(db_column='Phone_no', max_length=15)),
            ],
            options={
                'db_table': 'user_phones',
                'managed': False,
            },
        ),
    ]
